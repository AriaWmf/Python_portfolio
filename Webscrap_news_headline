from selenium import webdriver
from selenium.common.exceptions import NoSuchElementException

# login wsj
extractItems = []
browser= webdriver.Chrome("xxx")  # root of chrome
browser.get('http://wsj.com/')
login = browser.find_element_by_link_text("Sign In").click()
loginID = browser.find_element_by_id("username").send_keys('xxx')             # Input username
loginPass = browser.find_element_by_id("password").send_keys('xxx')     # Input password
loginReady = browser.find_element_by_class_name("sign-in")
loginReady.submit()

#scrap headlines
search_button = browser.find_elements_by_xpath('//*[@id="masthead-container"]/div/button[2]')[0]
search_button.click()
#right corner search button
# ps : need refresh

search_box = browser.find_element_by_id("searchInput")
search_box.send_keys('Tesla')                          # Input search keyword

search_button2 = browser.find_elements_by_xpath('//*[@id="root"]/div/div/div/div[1]/header/div[2]/div/div[1]/button')[0]
search_button2.click()
# sencond search button

toggleMenu = browser.find_element_by_link_text("ADVANCED SEARCH").click()
#advanced search button

menuOptions = browser.find_element_by_class_name('datePeriod')
toggleButton = menuOptions.find_element_by_css_selector(".dropdown-toggle")
toggleButton.click()
#click for the dateperiod 

dropdownOptions = menuOptions.find_elements_by_tag_name("li")
dropdownOptions[len(dropdownOptions)-1].click()                                
# Adjust list length for date ranges

searchArchive = browser.find_element_by_class_name('keywordSearchBar')
searchArchive.find_element_by_class_name("searchButton").click()

#scrap on result pages:
# function 1 
def getPageUrl(elementLinks):
    extractLinks = []
    for element in elementLinks:
        links = element.get_attribute('href')
        extractLinks.append(links)
    return(extractLinks)


import pandas as pd
extractItems=pd.DataFrame(columns = ['headlines', 'date'])
extractItems

# final work 
while True:
    try:
        browser.find_element_by_class_name('next-page')
        elementLinks = browser.find_elements_by_xpath('//h3[@class="headline"]/a')
      #  extractElements(getPageUrl(elementLinks))
        second_browser = webdriver.Chrome("/Users/mengf/Downloads/chromedriver")
        for extracted_url in getPageUrl(elementLinks):
            second_browser.get(extracted_url)
            headline = second_browser.find_element_by_class_name("headline").text
            time = second_browser.find_element_by_class_name("timestamp").text
            b = pd.DataFrame([[headline,time]], columns = ['headlines', 'date']) 
            extractItems=extractItems.append(b) 
        second_browser.close()
        element = browser.find_element_by_link_text('Next')
        element.click()
    except NoSuchElementException:
        break
        second_browser.close()
        browser.close()
        
 extractItems
